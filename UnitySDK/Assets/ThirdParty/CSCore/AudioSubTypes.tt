<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Text.RegularExpressions" #>
<#@ output extension=".cs" #>
using System;

namespace CSCore
{
	public static partial class AudioSubTypes
	{
// ReSharper disable InconsistentNaming

<#
	const string tab = "\t\t";
	const string enumPattern = @".*enum\s+(\S+).*\s+{\s*([^\}]+?)\s*\}\s*";
	var audioEncodingFile = Host.ResolvePath("AudioEncoding.cs");
	var text = File.ReadAllText(audioEncodingFile);

    var match = Regex.Match(text, enumPattern, RegexOptions.Multiline);
    var enumName = match.Groups[1].Value;
    var enumContent = match.Groups[2].Value;

    var lines = enumContent.Split(new string[] {Environment.NewLine}, StringSplitOptions.RemoveEmptyEntries);

	foreach (var line in lines)
	{
		var trimedLine = line.Trim();
		if (trimedLine.StartsWith("//") || String.IsNullOrWhiteSpace(trimedLine))
		{
			WriteLine(tab + trimedLine);
		}
		else
		{
			var splittedLine = line.Split('=');

			WriteLine("{3}public static readonly Guid {0} = new Guid((short){2}.{1} & 0x0000FFFF, 0x0000, 0x0010, 0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71);",
				splittedLine[0].Trim(), splittedLine[0].Trim(), enumName, tab);
		}
	}
#>

// ReSharper restore InconsistentNaming 
	}
}